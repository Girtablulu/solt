#!/bin/bash

# Load all the basch scripts
for file in /usr/share/solt/*; do
    source /usr/share/solt/solt_common
    source /usr/share/solt/solt_log
    source /usr/share/solt/solt_functions
done

if [ -f "/etc/solt/solt.conf" ]; then
        source /etc/solt/solt.conf
fi

# Create a repo package
function _create_repo {
    _file_check $build_dir/$reponame
    mkdir -p $build_dir/$reponame 
    cd $build_dir/$reponame
        _show_request "Please enter package source url"
        read URL
            $common_dir/$yauto_path ${URL}
        git init;
        _create_makefile
        _show_confirm "Makefile created"
    _exec_shell
}

# Update a repo
function _update_repo {
    _file_check $build_dir/$reponame
    make $reponame.clone
    cd $build_dir/$reponame
        _show_request "Please enter new version no and url"
        read VERSION URL
            python $yupdate_path ${VERSION} ${URL}
    _exec_shell
}

# Clone a repo
function _clone_repo {
    _file_check $build_dir/$reponame
    make $reponame.clone
    cd $build_dir/$reponame
    _exec_shell
}

# Clone and bump a repo
function _bump_repo {
    _file_check $build_dir/$reponame
    make $reponame.clone
    cd $build_dir/$reponame
        make bump
    _exec_shell
}

# Clone a Diff for a repo
function _diff_repo {
    _clonefolder_check
    make $reponame.clone
    cd $clone_dir/$reponame
        arc patch $diff
    _exec_shell
}

# Clone an initial diff
function _initial_repo {
    _file_check $build_dir/$reponame
    mkdir -p $build_dir/$reponame
    cd $build_dir/$reponame
        git init
        git commit -s -m "Test repo" --allow-empty
        arc patch $diff
    _exec_shell
}
